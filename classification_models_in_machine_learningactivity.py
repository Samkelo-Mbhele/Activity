# -*- coding: utf-8 -*-
"""CLASSIFICATION MODELS IN MACHINE LEARNINGActivity.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BYS7Yc4KMHTJ9Z7otV7t89TZcSjCCcee

Mbhele S; 22339019

Loading the Dataset
"""

from sklearn.datasets import load_breast_cancer

data = load_breast_cancer()

X = data.data
y = data.target

print("Features shape:", X.shape)
print("Labels shape:", y.shape)

print("Feature names:", data.feature_names)

"""Spliting the Data and Train the Model."""

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

log_model = LogisticRegression(max_iter=10000)
log_model.fit(X_train, y_train)

rf_model = RandomForestClassifier()
rf_model.fit(X_train, y_train)

"""Predictions and Evaluating the Models.

"""

from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

y_pred_log = log_model.predict(X_test)
y_pred_rf = rf_model.predict(X_test)

print("ðŸ”Ž Logistic Regression Evaluation:")
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred_log))
print("Classification Report:\n", classification_report(y_test, y_pred_log))
print("Accuracy:", accuracy_score(y_test, y_pred_log))

print("\nðŸŒ² Random Forest Evaluation:")
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred_rf))
print("Classification Report:\n", classification_report(y_test, y_pred_rf))
print("Accuracy:", accuracy_score(y_test, y_pred_rf))

"""### Model Evaluation Summary

Two classification models were evaluated using the breast cancer dataset:

---

####  Logistic Regression:
- **Accuracy**: 97.66%
- **Precision**:
  - Class 0 (benign): 97%
  - Class 1 (malignant): 98%
- **Recall**:
  - Class 0: 97%
  - Class 1: 98%
- **F1-score**: Both classes around 97â€“98%
- **Confusion Matrix**:
  - Very few misclassifications (2 false positives and 2 false negatives)

**Interpretation**:  
Logistic Regression performed **very well**, with **high accuracy**, **balanced precision and recall**, and very few errors. It's especially impressive given that it's a simple model.



####  Random Forest:
- **Accuracy**: 96.49%
- **Precision**:
  - Class 0: 97%
  - Class 1: 96%
- **Recall**:
  - Class 0: 94%
  - Class 1: 98%
- **F1-score**: 95â€“97%
- **Confusion Matrix**:
  - 4 false positives (benign wrongly predicted as malignant)
  - 2 false negatives

 **Interpretation**:  
Random Forest also performed well, especially in **detecting malignant tumors** (98% recall). However, it made **more mistakes on benign cases** compared to Logistic Regression.


While both models gave **high accuracy**, the **Logistic Regression model slightly outperformed Random Forest** in this case. It had **higher precision and recall balance**, **fewer false positives**, and a better overall F1-score.

 **Preferred Model**: Logistic Regression  
Because it gives simpler, faster, and slightly more accurate results for this dataset.


### Note:
In real-world applications like medical diagnosis, minimizing **false negatives** is critical. Both models performed well in that regard, but Logistic Regression provided a **more balanced performance** across both classes.

"""